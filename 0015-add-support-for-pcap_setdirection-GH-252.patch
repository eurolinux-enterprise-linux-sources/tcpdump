From e77da8e6f581a25651fb83b64e891d2e9ff5ed3f Mon Sep 17 00:00:00 2001
From: Thomas Jacob <jacob@internet24.de>
Date: Tue, 25 Aug 2009 21:42:12 +0200
Subject: [PATCH] add support for pcap_setdirection() (GH#252)

Adds -P in|out|inout option, includes man page and command line help
updates.

(cherry picked from commit df7d24fc7ab4353270218c8855c7111075d2d6d2)

Conflicts:
        tcpdump.c
---
 configure.in |  7 +++++++
 tcpdump.1.in | 10 ++++++++++
 tcpdump.c    | 34 ++++++++++++++++++++++++++++++++--
 3 files changed, 49 insertions(+), 2 deletions(-)

diff --git a/configure.in b/configure.in
index 4217077..5250d9a 100644
--- a/configure.in
+++ b/configure.in
@@ -794,6 +794,13 @@ else
 		AC_MSG_RESULT(no)
 	fi
 fi
+
+AC_CHECK_FUNCS(pcap_setdirection)
+if test $ac_cv_func_pcap_setdirection = "yes" ; then
+dnl Check for capture direction setting support
+	AC_DEFINE(HAVE_PCAP_SETDIRECTION)
+fi
+
 AC_REPLACE_FUNCS(bpf_dump)	dnl moved to libpcap in 0.6
 
 V_GROUP=0
diff --git a/tcpdump.1.in b/tcpdump.1.in
index 8304a55..24976f5 100644
--- a/tcpdump.1.in
+++ b/tcpdump.1.in
@@ -70,6 +70,11 @@ tcpdump \- dump traffic on a network
 .br
 .ti +8
 [
+.B \-P
+.I in|out|inout
+]
+.ti +8
+[
 .B \-r
 .I file
 ]
@@ -448,6 +453,11 @@ Note that the interface might be in promiscuous
 mode for some other reason; hence, `-p' cannot be used as an abbreviation for
 `ether host {local-hw-addr} or ether broadcast'.
 .TP
+.B \-P
+Choose send/receive direction \fIdirection\fR for which packets should be
+captured. Possible values are `in', `out' and `inout'. Not available
+on all platforms.
+.TP
 .B \-q
 Quick (quiet?) output.
 Print less protocol information so output
diff --git a/tcpdump.c b/tcpdump.c
index b227a88..b9784e3 100644
--- a/tcpdump.c
+++ b/tcpdump.c
@@ -98,6 +98,10 @@ int Lflag;			/* list available data link types and exit */
 static int Jflag;			/* list available time stamp types */
 #endif
 
+#ifdef HAVE_PCAP_SETDIRECTION
+int Pflag = PCAP_D_INOUT;	/* Restrict captured packet by sent/receive direction */
+#endif
+
 char *zflag = NULL;		/* compress each savefile using a specified command (like gzip or bzip2) */
 
 static int infodelay;
@@ -431,6 +435,12 @@ show_dlts_and_exit(pcap_t *pd)
 #define U_FLAG
 #endif
 
+#ifdef HAVE_PCAP_SETDIRECTION
+#define P_FLAG "P:"
+#else
+#define P_FLAG
+#endif
+
 #define OPTION_TSTAMP_PRECISION 130
 
 static struct option longopts[] = {
@@ -605,7 +615,7 @@ main(int argc, char **argv)
 
 	opterr = 0;
 	while (
-               (op = getopt_long(argc, argv, "aA" B_FLAG "c:C:d" D_FLAG "eE:fF:G:i:" I_FLAG j_FLAG J_FLAG "KlLm:M:nNOpqr:Rs:StT:u" U_FLAG "vw:W:xXy:Yz:Z:", longopts, NULL)) != -1)
+               (op = getopt_long(argc, argv, "aA" B_FLAG "c:C:d" D_FLAG "eE:fF:G:i:" I_FLAG j_FLAG J_FLAG "KlLm:M:nNOp" P_FLAG "qr:Rs:StT:u" U_FLAG "vw:W:xXy:Yz:Z:", longopts, NULL)) != -1)
 		switch (op) {
 
 		case 'a':
@@ -818,7 +828,18 @@ main(int argc, char **argv)
 		case 'p':
 			++pflag;
 			break;
-
+#ifdef HAVE_PCAP_SETDIRECTION
+		case 'P':
+			if (strcasecmp(optarg, "in") == 0)
+				Pflag = PCAP_D_IN;
+			else if (strcasecmp(optarg, "out") == 0)
+				Pflag = PCAP_D_OUT;
+			else if (strcasecmp(optarg, "inout") == 0)
+				Pflag = PCAP_D_INOUT;
+			else
+				error("unknown capture direction `%s'", optarg);
+			break;
+#endif /* HAVE_PCAP_SETDIRECTION */
 		case 'q':
 			++qflag;
 			++suppress_default_print;
@@ -1132,6 +1153,12 @@ main(int argc, char **argv)
 				warning("%s: %s", device,
 				    pcap_statustostr(status));
 		}
+#ifdef HAVE_PCAP_SETDIRECTION
+		status = pcap_setdirection(pd, Pflag);
+		if (status != 0)
+			error("%s: pcap_set_direction failed: %s",
+			    device,  pcap_geterr(pd));
+#endif
 #else
 		*ebuf = '\0';
 		pd = pcap_open_live(device, snaplen, !pflag, 1000, ebuf);
@@ -1817,6 +1844,9 @@ usage(void)
 "\t\t[ -C file_size ] [ -E algo:secret ] [ -F file ] [ -G seconds ]\n");
 	(void)fprintf(stderr,
 "\t\t[ -i interface ]" j_FLAG_USAGE " [ -M secret ]\n");
+#ifdef HAVE_PCAP_SETDIRECTION
+	(void)fprintf(stderr,"\t\t[ -P in|out|inout ]\n");
+#endif
 	(void)fprintf(stderr,
 "\t\t[ -r file ] [ -s snaplen ] [ -T type ] [ -w file ]\n");
 	(void)fprintf(stderr,
-- 
1.8.3.1

