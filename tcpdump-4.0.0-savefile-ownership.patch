From: Lubo≈° Uhliarik <luhliari@redhat.com>
Date: Thu, 10 Sep 2015 10:42:12 +0200
Subject: [PATCH] change ownership of savefile

Conflicts:
        tcpdump.c

--- a/tcpdump.c
+++ b/tcpdump.c
@@ -1240,10 +1240,25 @@ main(int argc, char **argv)
 		(void)setsignal(SIGHUP, oldhandler);
 #endif /* WIN32 */
 
-	if (Cflag != 0 && (getuid() == 0 || geteuid() == 0)) {
-		if (username || chroot_dir)
+int chown_flag = 0;
+#ifndef WIN32
+	/* If user is running tcpdump as root and wants to write to the savefile,
+	 * we will check if -C is set and if it is, we will drop root
+	 * privileges right away and consequent call to	pcap_dump_open()
+	 * will most likely fail for the first file. If -C flag is not set we
+	 * will create file as root then change ownership of file to proper
+	 * user(default tcpdump) and drop root privileges.
+	 */
+	if (WFileName && (getuid() == 0 || geteuid() == 0))
+		if ((Gflag || Cflag) && (username || chroot_dir))
 			droproot(username, chroot_dir);
-	}
+                else
+			chown_flag = 1;
+	else if ((Gflag == 0 && Cflag == 0) &&
+		(getuid() == 0 || geteuid() == 0) &&
+		(username || chroot_dir))
+			droproot(username, chroot_dir);
+#endif /* WIN32 */
 
 	if (pcap_setfilter(pd, &fcode) < 0)
 		error("%s", pcap_geterr(pd));
@@ -1262,6 +1277,22 @@ main(int argc, char **argv)
 		  MakeFilename(dumpinfo.CurrentFileName, WFileName, 0, 0);
 
 		p = pcap_dump_open(pd, dumpinfo.CurrentFileName);
+
+		/* Change ownership of file and drop root privileges */
+		if (chown_flag) {
+			struct passwd *pwd;
+
+			pwd = getpwnam(username);
+			if (!pwd)
+				error("Couldn't find user '%s'", username);
+
+			if (strcmp(WFileName, "-") && chown(dumpinfo.CurrentFileName, pwd->pw_uid, pwd->pw_gid) < 0)
+				error("Couldn't change ownership of savefile");
+
+			if (username || chroot_dir)
+				droproot(username, chroot_dir);
+		}
+
 		if (p == NULL)
 			error("%s", pcap_geterr(pd));
 		if (Cflag != 0 || Gflag != 0) {
@@ -1288,16 +1319,7 @@ main(int argc, char **argv)
 		callback = print_packet;
 		pcap_userdata = (u_char *)&printinfo;
 	}
-#ifndef WIN32
-	/*
-	 * We cannot do this earlier, because we want to be able to open
-	 * the file (if done) for writing before giving up permissions.
-	 */
-	if (Cflag == 0 && (getuid() == 0 || geteuid() == 0)) {
-		if (username || chroot_dir)
-			droproot(username, chroot_dir);
-	}
-#endif /* WIN32 */
+
 #ifdef SIGINFO
 	/*
 	 * We can't get statistics when reading from a file rather
